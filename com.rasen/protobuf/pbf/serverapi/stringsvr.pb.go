// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serverapi/stringsvr.proto

package stringsvr

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StringMsgResp struct {
	S                    string   `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringMsgResp) Reset()         { *m = StringMsgResp{} }
func (m *StringMsgResp) String() string { return proto.CompactTextString(m) }
func (*StringMsgResp) ProtoMessage()    {}
func (*StringMsgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ccd6b085d5d34ea, []int{0}
}

func (m *StringMsgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMsgResp.Unmarshal(m, b)
}
func (m *StringMsgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMsgResp.Marshal(b, m, deterministic)
}
func (m *StringMsgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMsgResp.Merge(m, src)
}
func (m *StringMsgResp) XXX_Size() int {
	return xxx_messageInfo_StringMsgResp.Size(m)
}
func (m *StringMsgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMsgResp.DiscardUnknown(m)
}

var xxx_messageInfo_StringMsgResp proto.InternalMessageInfo

func (m *StringMsgResp) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

func (m *StringMsgResp) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type StringMsgReq struct {
	S                    string   `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringMsgReq) Reset()         { *m = StringMsgReq{} }
func (m *StringMsgReq) String() string { return proto.CompactTextString(m) }
func (*StringMsgReq) ProtoMessage()    {}
func (*StringMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ccd6b085d5d34ea, []int{1}
}

func (m *StringMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMsgReq.Unmarshal(m, b)
}
func (m *StringMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMsgReq.Marshal(b, m, deterministic)
}
func (m *StringMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMsgReq.Merge(m, src)
}
func (m *StringMsgReq) XXX_Size() int {
	return xxx_messageInfo_StringMsgReq.Size(m)
}
func (m *StringMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_StringMsgReq proto.InternalMessageInfo

func (m *StringMsgReq) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

func init() {
	proto.RegisterType((*StringMsgResp)(nil), "stringsvr.StringMsgResp")
	proto.RegisterType((*StringMsgReq)(nil), "stringsvr.StringMsgReq")
}

func init() { proto.RegisterFile("serverapi/stringsvr.proto", fileDescriptor_5ccd6b085d5d34ea) }

var fileDescriptor_5ccd6b085d5d34ea = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0x4a, 0x2c, 0xc8, 0xd4, 0x2f, 0x2e, 0x29, 0xca, 0xcc, 0x4b, 0x2f, 0x2e, 0x2b, 0xd2,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28, 0xe9, 0x73, 0xf1, 0x06, 0x83, 0x39,
	0xbe, 0xc5, 0xe9, 0x41, 0xa9, 0xc5, 0x05, 0x42, 0x3c, 0x5c, 0x8c, 0xc5, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x9c, 0x41, 0x8c, 0xc5, 0x42, 0x02, 0x5c, 0xcc, 0xa9, 0x45, 0x45, 0x12, 0x4c, 0x60, 0x3e,
	0x88, 0xa9, 0x24, 0xc3, 0xc5, 0x83, 0xa4, 0xa1, 0x10, 0x55, 0xbd, 0xd1, 0x44, 0x46, 0x98, 0x74,
	0x30, 0xd8, 0x76, 0x21, 0x7b, 0x2e, 0xae, 0xe0, 0x8c, 0xfc, 0x72, 0x88, 0x98, 0x90, 0xb8, 0x1e,
	0xc2, 0x29, 0xc8, 0xa6, 0x48, 0x49, 0x60, 0x97, 0x28, 0x2e, 0x10, 0x72, 0xe0, 0xe2, 0x0e, 0x4b,
	0xcc, 0xc9, 0x4c, 0x21, 0xdb, 0x04, 0x27, 0x26, 0x0f, 0xe6, 0x24, 0x36, 0xb0, 0xc7, 0x8d, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xf5, 0x64, 0xc4, 0x15, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StringServerClient is the client API for StringServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StringServerClient interface {
	ShowString(ctx context.Context, in *StringMsgReq, opts ...grpc.CallOption) (*StringMsgResp, error)
	ValidString(ctx context.Context, in *StringMsgReq, opts ...grpc.CallOption) (*StringMsgResp, error)
}

type stringServerClient struct {
	cc *grpc.ClientConn
}

func NewStringServerClient(cc *grpc.ClientConn) StringServerClient {
	return &stringServerClient{cc}
}

func (c *stringServerClient) ShowString(ctx context.Context, in *StringMsgReq, opts ...grpc.CallOption) (*StringMsgResp, error) {
	out := new(StringMsgResp)
	err := c.cc.Invoke(ctx, "/stringsvr.StringServer/ShowString", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stringServerClient) ValidString(ctx context.Context, in *StringMsgReq, opts ...grpc.CallOption) (*StringMsgResp, error) {
	out := new(StringMsgResp)
	err := c.cc.Invoke(ctx, "/stringsvr.StringServer/ValidString", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StringServerServer is the server API for StringServer service.
type StringServerServer interface {
	ShowString(context.Context, *StringMsgReq) (*StringMsgResp, error)
	ValidString(context.Context, *StringMsgReq) (*StringMsgResp, error)
}

func RegisterStringServerServer(s *grpc.Server, srv StringServerServer) {
	s.RegisterService(&_StringServer_serviceDesc, srv)
}

func _StringServer_ShowString_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServerServer).ShowString(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stringsvr.StringServer/ShowString",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServerServer).ShowString(ctx, req.(*StringMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StringServer_ValidString_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServerServer).ValidString(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stringsvr.StringServer/ValidString",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServerServer).ValidString(ctx, req.(*StringMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _StringServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stringsvr.StringServer",
	HandlerType: (*StringServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ShowString",
			Handler:    _StringServer_ShowString_Handler,
		},
		{
			MethodName: "ValidString",
			Handler:    _StringServer_ValidString_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "serverapi/stringsvr.proto",
}
